---
# This is a workflow meant for epitech students

name: CI Epitech Project

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Triggers the worlfow every day at 23h42
  # schedule:
    # - cron: "42 23 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "DockerEpitech"
  DockerEpitech:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Get Conan for package managing
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.0

      # Create a folder for builds and executables 
    - name: Create `Builds` folder
      run: mkdir -p Builds

      # Installation of dependencies using conan, in this case mainly boost
    - name: Install dependencies
      run: conan install . -s build_type=${{env.BUILD_TYPE}} --install-folder=${{github.workspace}}/Builds

      # Configure CMake in the previously created 'Builds' subdirectory.
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/Builds

      # Build R-Type projet :frog:
    - name: Build
      run: cmake --build ${{github.workspace}}/build

  # This workflow contains a single job called "TestDrivenDevelopement"
  TestDrivenDevelopement:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a bash file that executes unit tests (with criterion)
      - name: Execute Criterion testing sequences
        run: |
          bash .github/scripts/unit_tests.sh
